{
  "_args": [
    [
      {
        "raw": "grunt-html@^8.1.0",
        "scope": null,
        "escapedName": "grunt-html",
        "name": "grunt-html",
        "rawSpec": "^8.1.0",
        "spec": ">=8.1.0 <9.0.0",
        "type": "range"
      },
      "/home/vadim/git/nikola/nikoboo4u/themes/nikoboo4u-theme/sass/bower_components/bootstrap"
    ]
  ],
  "_from": "grunt-html@>=8.1.0 <9.0.0",
  "_id": "grunt-html@8.4.0",
  "_inCache": true,
  "_location": "/grunt-html",
  "_nodeVersion": "6.10.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/grunt-html-8.4.0.tgz_1490537912072_0.5694641780573875"
  },
  "_npmUser": {
    "name": "xhmikosr",
    "email": "xhmikosr@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {
    "lodash": "4.17.4"
  },
  "_requested": {
    "raw": "grunt-html@^8.1.0",
    "scope": null,
    "escapedName": "grunt-html",
    "name": "grunt-html",
    "rawSpec": "^8.1.0",
    "spec": ">=8.1.0 <9.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-html/-/grunt-html-8.4.0.tgz",
  "_shasum": "dc96d45d5655ab1e4d1bad76a4413743b59a7838",
  "_shrinkwrap": null,
  "_spec": "grunt-html@^8.1.0",
  "_where": "/home/vadim/git/nikola/nikoboo4u/themes/nikoboo4u-theme/sass/bower_components/bootstrap",
  "author": {
    "name": "Jörn Zaefferer",
    "email": "joern.zaefferer@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/jzaefferer/grunt-html/issues"
  },
  "dependencies": {
    "async": "2.2.0",
    "chalk": "1.1.3",
    "vnu-jar": "17.3.0"
  },
  "description": "Grunt plugin for html validation, using vnu.jar for the actual validation",
  "devDependencies": {
    "grunt": "1.0.1",
    "grunt-contrib-jshint": "1.1.0",
    "grunt-contrib-nodeunit": "1.0.0",
    "grunt-jscs": "3.0.1",
    "stripcolorcodes": "0.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "dc96d45d5655ab1e4d1bad76a4413743b59a7838",
    "tarball": "https://registry.npmjs.org/grunt-html/-/grunt-html-8.4.0.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "files": [
    "lib",
    "tasks",
    "LICENSE-MIT"
  ],
  "gitHead": "4611fef01bf97bcf697ff7ec2071f2ae1abb9400",
  "homepage": "https://github.com/jzaefferer/grunt-html",
  "keywords": [
    "gruntplugin"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "jzaefferer",
      "email": "joern.zaefferer@gmail.com"
    },
    {
      "name": "laurentgoderre",
      "email": "laurent.goderre@gmail.com"
    },
    {
      "name": "xhmikosr",
      "email": "xhmikosr@gmail.com"
    }
  ],
  "name": "grunt-html",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "readme": "# grunt-html\r\n\r\n[![Linux Build Status](https://img.shields.io/travis/jzaefferer/grunt-html/master.svg?label=Linux%20build)](https://travis-ci.org/jzaefferer/grunt-html)\r\n[![Windows Build status](https://img.shields.io/appveyor/ci/jzaefferer/grunt-html/master.svg?label=Windows%20build)](https://ci.appveyor.com/project/jzaefferer/grunt-html/branch/master)\r\n[![Code Climate](https://img.shields.io/codeclimate/github/jzaefferer/grunt-html.svg)](https://codeclimate.com/github/jzaefferer/grunt-html)\r\n[![Dependency Status](https://img.shields.io/david/jzaefferer/grunt-html.svg)](https://david-dm.org/jzaefferer/grunt-html)\r\n[![devDependency Status](https://img.shields.io/david/dev/jzaefferer/grunt-html.svg)](https://david-dm.org/jzaefferer/grunt-html#info=devDependencies)\r\n\r\n[Grunt][grunt] plugin for HTML validation, using the [vnu.jar markup checker][vnujar].\r\n\r\n## Getting Started\r\n\r\nInstall this grunt plugin next to your project's [Gruntfile.js][getting_started] with:\r\n\r\n```bash\r\nnpm install grunt-html --save-dev\r\n```\r\n\r\nThen add this line to your project's `Gruntfile.js`:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-html');\r\n```\r\n\r\nThen specify what files to validate in your config:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  htmllint: {\r\n    all: [\"demos/**/*.html\", \"tests/**/*.html\"]\r\n  }\r\n});\r\n```\r\n\r\nFor fast validation, keep that in a single group, as the validator initialization takes a few seconds.\r\n\r\nWhen combined with a watching task (such as [grunt-contrib-watch][watch]), even faster validation can be achieved by starting the validator in client mode and connecting to an already-running instance of the validator in server mode. This removes the time required by repeated initializations. See the `server` option below.\r\n\r\n## Options\r\n\r\n### `ignore`\r\n\r\n* Type: `Array`, `String`, or `RegExp`\r\n* Default: `null`\r\n\r\nUse this to specify the error message(s) to ignore. For example:\r\n\r\n```js\r\nall: {\r\n  options: {\r\n    ignore: 'The “clear” attribute on the “br” element is obsolete. Use CSS instead.'\r\n  },\r\n  src: \"html4.html\"\r\n}\r\n```\r\n\r\nThe `ignore` option also supports regular expressions. For example, to ignore AngularJS directive attributes:\r\n\r\n```js\r\nall: {\r\n  options: {\r\n    ignore: /attribute “ng-[a-z-]+” not allowed/\r\n  },\r\n  src: \"app.html\"\r\n}\r\n```\r\n\r\n### `server`\r\n\r\n* Type: `Object`, or a falsy value\r\n* Default: `false`\r\n\r\nWhen `server` is set to a falsy value, the validator is invoked using `java -jar`, which can be considered normal operation.\r\n\r\nSet `server` to an object to start the validator in client mode and connect to an already-running instance of the validator in server mode.\r\nTo start the validator in server mode, use `java -cp \"path/to/vnu.jar\" nu.validator.servlet.Main <port>`.\r\n\r\n```js\r\nall: {\r\n  options: {\r\n    // connect to a validator instance running in server mode on localhost:8888\r\n    server: {}\r\n  },\r\n  src: \"app.html\"\r\n}\r\n```\r\n\r\nThe `server` object also accepts the `host` and `port` keys, specifying the location of the server.\r\n\r\n```js\r\nall: {\r\n  options: {\r\n    server: {\r\n      // your team's local dev tool machine, for example\r\n      host: '192.168.0.5',\r\n      port: 8877\r\n    }\r\n  },\r\n  src: \"app.html\"\r\n}\r\n```\r\n\r\nThe following configuration in Gruntfile.js uses [grunt-vnuserver][vnuserver] to start the validator in server mode and sets up a watch task to run `htmllint` every time the source file changes.\r\nBy starting the validator in server mode once using the `vnuserver` task, validations by `htmllint` can be performed much faster by simply connecting to this already-running server.\r\n\r\n```js\r\nmodule.exports = function (grunt) {\r\n  grunt.initConfig({\r\n    vnuserver: {\r\n    },\r\n    htmllint: {\r\n      all: {\r\n        options: {\r\n          server: {}\r\n        },\r\n        src: \"app.html\"\r\n      }\r\n    },\r\n    watch: {\r\n      all: {\r\n        tasks: ['htmllint'],\r\n        files: \"app.html\"\r\n      }\r\n    }\r\n  });\r\n\r\n  grunt.loadNpmTasks('grunt-vnuserver');\r\n  grunt.loadNpmTasks('grunt-html');\r\n  grunt.loadNpmTasks('grunt-contrib-watch');\r\n\r\n  grunt.registerTask('default', ['vnuserver', 'watch']);\r\n};\r\n```\r\n\r\n### `errorlevels`\r\n\r\n* Type: `Array`\r\n* Default: `'info','warning','error'`\r\n\r\nSet `errorlevels` to control which error types are returned from the validator. Ignores all other returned types.\r\n\r\n### `force`\r\n\r\n* Type: `Boolean`\r\n* Default: `false`\r\n\r\nSet `force` to `true` to report errors but not fail the `grunt` task.\r\n\r\n### `reporter`\r\n\r\n* Type: `String`\r\n* Default: `null`\r\n\r\nAllows you to modify the output format. By default, this plugin will use a built-in Grunt reporter. Set the path to your own custom reporter or to one of the provided reporters: `checkstyle`, `junit` or `json`.\r\n\r\n### `reporterOutput`\r\n\r\n* Type: `String`\r\n* Default: `null`\r\n\r\nSpecify a filepath to output the results of a reporter. If `reporterOutput` is specified then all output will be written to the given filepath rather than printed to `stdout`.\r\n\r\n### `absoluteFilePathsForReporter`\r\n\r\n* Type: `Boolean`\r\n* Default: `false`\r\n\r\nSet `absoluteFilePathsForReporter` to `true` to use absolute file paths in generated reports.\r\n\r\n## Travis CI potential pitfalls\r\n\r\nSince vnu.jar requires Java 8 environment, you might have trouble setting Travis CI to work with grunt-html.\r\nIn that case see [this patch](https://github.com/jquery/jquery-ui/commit/ff3769272bb5530b224297fa5d2add1865acbb7f)\r\nand the [Travis CI doc page](https://docs.travis-ci.com/user/trusty-ci-environment/).\r\n\r\n## License\r\n\r\nCopyright Jörn Zaefferer.  \r\nLicensed under the MIT license.\r\n\r\n[grunt]: http://gruntjs.com/\r\n[getting_started]: http://gruntjs.com/getting-started\r\n[vnujar]: https://validator.github.io/validator/\r\n[watch]: https://github.com/gruntjs/grunt-contrib-watch\r\n[vnuserver]: https://www.npmjs.com/package/grunt-vnuserver\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jzaefferer/grunt-html.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "8.4.0"
}
