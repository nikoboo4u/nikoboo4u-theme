{
  "_args": [
    [
      {
        "raw": "grunt-update",
        "scope": null,
        "escapedName": "grunt-update",
        "name": "grunt-update",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/vadim/git/nikola/nikoboo4u/themes/nikoboo4u-theme/sass/bower_components/bootstrap"
    ]
  ],
  "_from": "grunt-update@latest",
  "_id": "grunt-update@0.2.3",
  "_inCache": true,
  "_location": "/grunt-update",
  "_npmUser": {
    "name": "osteele",
    "email": "steele@osteele.com"
  },
  "_npmVersion": "1.3.24",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-update",
    "scope": null,
    "escapedName": "grunt-update",
    "name": "grunt-update",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-update/-/grunt-update-0.2.3.tgz",
  "_shasum": "269bc9fb1732530aabbed6b01feef4ff8f5f5f6f",
  "_shrinkwrap": null,
  "_spec": "grunt-update",
  "_where": "/home/vadim/git/nikola/nikoboo4u/themes/nikoboo4u-theme/sass/bower_components/bootstrap",
  "author": {
    "name": "Oliver Steele",
    "email": "steele@osteele.com",
    "url": "http://osteele.com"
  },
  "bugs": {
    "url": "https://github.com/osteele/grunt-update/issues"
  },
  "dependencies": {},
  "description": "Run only those tasks whose source files have changed.",
  "devDependencies": {
    "coffee-script": ">=1.7.1",
    "grunt": "~0.4.2",
    "grunt-cli": "~0.1.13",
    "grunt-coffeelint": "~0.0.8",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-copy": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.3.0",
    "grunt-release": "~0.6.0",
    "load-grunt-tasks": "~0.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "269bc9fb1732530aabbed6b01feef4ff8f5f5f6f",
    "tarball": "https://registry.npmjs.org/grunt-update/-/grunt-update-0.2.3.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "files": [
    "tasks",
    "LICENSE-MIT"
  ],
  "homepage": "https://github.com/osteele/grunt-update",
  "keywords": [
    "gruntplugin"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/osteele/grunt-update/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "osteele",
      "email": "steele@osteele.com"
    }
  ],
  "name": "grunt-update",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "readme": "# grunt-update\n\n[![NPM version](https://badge.fury.io/js/grunt-update.png)](http://badge.fury.io/js/grunt-update)\n[![Build Status](https://api.travis-ci.org/osteele/grunt-update.png?branch-master)](https://api.travis-ci.org/osteele/grunt-update.png?branch-master)\n[![Build Status](https://david-dm.org/osteele/grunt-update.png)](https://david-dm.org/osteele/grunt-update.png)\n\nRun only those tasks whose source files are more recent than their destination targets.\n\nThis is like [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch), but suitable for repeated\ninvocation from the command line. It also doesn't get out of date if files changed while it wasn't running.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.x`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-update --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-update');\n```\n\n## The \"update\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `update` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  update: {\n    tasks: ['task1', 'task2', 'task3']\n  },\n})\n```\n\n### Usage Examples\n\nThere are three formats you can use to configure this task.\n\n#### Short\n```js\nupdate: { tasks: ['copy', 'jade', 'sass'] }\n```\n\nThis configures an `update` task that acts as though defined by:\n\n```js\ngrunt.registerTask 'update', ['copy', 'jade', 'sass']\n```\n\n*except* that each of the `copy`, `jade`, and `sass` tasks will be executed *only* if their respective destination files\neither do not exist, or are out of date with respect to their source files.\n\n#### Medium\n```js\nupdate: {\n  app: ['copy:app', 'jade:app', 'sass:app']\n  libs: ['copy:libs', 'jade:libs', 'sass:libs']\n}\n```\n\nThis configures `update:app` and `update:lib` tasks. (`update` runs them both.)\n\n#### Long\n```js\nupdate: {\n  app:\n    tasks: ['copy:app', 'jade:app', 'sass:app']\n  libs:\n    tasks: ['copy:libs', 'jade:libs', 'sass:libs']\n}\n```\n\nLike the *Medium* format, this configures `update:app` and `update:lib` tasks (and `update` runs them both.)\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n* September 24, 20012 -- initial release\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/osteele/grunt-update.git"
  },
  "scripts": {
    "build": "coffee -o tasks --bare --compile --map src",
    "clean": "rm -f tasks/*.{js,map}",
    "prepublish": "npm run build",
    "test": "npm run build && grunt test"
  },
  "version": "0.2.3"
}
