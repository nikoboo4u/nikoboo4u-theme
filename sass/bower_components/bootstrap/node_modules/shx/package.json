{
  "_args": [
    [
      {
        "raw": "shx@^0.2.1",
        "scope": null,
        "escapedName": "shx",
        "name": "shx",
        "rawSpec": "^0.2.1",
        "spec": ">=0.2.1 <0.3.0",
        "type": "range"
      },
      "/home/vadim/git/nikola/nikoboo4u/themes/nikoboo4u-theme/sass/bower_components/bootstrap"
    ]
  ],
  "_from": "shx@>=0.2.1 <0.3.0",
  "_id": "shx@0.2.2",
  "_inCache": true,
  "_location": "/shx",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/shx-0.2.2.tgz_1483865443811_0.557509504025802"
  },
  "_npmUser": {
    "name": "nfischer",
    "email": "ntfschr@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "shx@^0.2.1",
    "scope": null,
    "escapedName": "shx",
    "name": "shx",
    "rawSpec": "^0.2.1",
    "spec": ">=0.2.1 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/shx/-/shx-0.2.2.tgz",
  "_shasum": "0a304d020b0edf1306ad81570e80f0346df58a39",
  "_shrinkwrap": null,
  "_spec": "shx@^0.2.1",
  "_where": "/home/vadim/git/nikola/nikoboo4u/themes/nikoboo4u-theme/sass/bower_components/bootstrap",
  "bin": {
    "shx": "lib/cli.js"
  },
  "bugs": {
    "url": "https://github.com/shelljs/shx/issues"
  },
  "contributors": [
    {
      "name": "Ari Porad",
      "email": "ari@ariporad.com",
      "url": "http://ariporad.com/"
    },
    {
      "name": "Levi Thomason",
      "email": "me@levithomason.com",
      "url": "https://github.com/levithomason"
    },
    {
      "name": "Nate Fischer",
      "email": "ntfschr@gmail.com"
    }
  ],
  "dependencies": {
    "es6-object-assign": "^1.0.3",
    "minimist": "^1.2.0",
    "shelljs": "^0.7.3"
  },
  "description": "Portable Shell Commands for Node",
  "devDependencies": {
    "babel-cli": "^6.6.5",
    "babel-preset-es2015": "^6.6.0",
    "babel-register": "^6.7.2",
    "codecov": "^1.0.1",
    "concurrently": "^2.1.0",
    "eslint": "^2.10.1",
    "eslint-config-airbnb-base": "^3.0.1",
    "eslint-plugin-import": "^1.8.0",
    "mocha": "^2.4.5",
    "nyc": "^6.4.0",
    "rimraf": "^2.5.2",
    "shelljs-changelog": "^0.2.0",
    "shelljs-plugin-open": "^0.1.1",
    "shelljs-release": "^0.2.0",
    "should": "^11.1.1",
    "watch": "^0.18.0"
  },
  "directories": {},
  "dist": {
    "shasum": "0a304d020b0edf1306ad81570e80f0346df58a39",
    "tarball": "https://registry.npmjs.org/shx/-/shx-0.2.2.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "413368d01ef5d81808ebf62c45c33b1680b7913b",
  "homepage": "https://github.com/shelljs/shx#readme",
  "keywords": [
    "shelljs",
    "shell",
    "unix",
    "bash",
    "sh",
    "exec",
    "cli",
    "zsh"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "ariporad",
      "email": "ari@ariporad.com"
    },
    {
      "name": "levithomason",
      "email": "me@levithomason.com"
    },
    {
      "name": "nfischer",
      "email": "ntfschr@gmail.com"
    }
  ],
  "name": "shx",
  "optionalDependencies": {},
  "readme": "# Shx\n\n[![Travis](https://img.shields.io/travis/shelljs/shx/master.svg?style=flat-square&label=unix)](https://travis-ci.org/shelljs/shx)\n[![AppVeyor](https://img.shields.io/appveyor/ci/shelljs/shx/master.svg?style=flat-square&label=windows)](https://ci.appveyor.com/project/shelljs/shx/branch/master)\n[![Codecov](https://img.shields.io/codecov/c/github/shelljs/shx/master.svg?style=flat-square&label=coverage)](https://codecov.io/gh/shelljs/shx)\n[![npm version](https://img.shields.io/npm/v/shx.svg?style=flat-square)](https://www.npmjs.com/package/shx)\n[![npm downloads](https://img.shields.io/npm/dm/shx.svg?style=flat-square)](https://www.npmjs.com/package/shx)\n\n`shx` is a wrapper around [ShellJS](https://github.com/shelljs/shelljs) Unix\ncommands, providing an easy solution for simple Unix-like, cross-platform\ncommands in npm package scripts.\n\n## Difference Between ShellJS and shx\n\n- **ShellJS:** Good for writing long scripts, all in JS, running via NodeJS (e.g. `node myScript.js`).\n- **shx:** Good for writing one-off commands in npm package scripts (e.g. `\"clean\": \"shx rm -rf out/\"`).\n\n## Install\n\n```shell\nnpm install shx --save-dev\n```\nThis will allow using `shx` in your `package.json` scripts.\n\n## Usage\n\n### Command Line\n\nIf you'd like to use `shx` on the command line, install it globally with the `-g` flag.\nThe following code can be run *either a Unix or Windows* command line:\n\n```Bash\n$ shx pwd                       # ShellJS commands are supported automatically\n/home/username/path/to/dir\n\n$ shx ls                        # files are outputted one per line\nfile.txt\nfile2.txt\n\n$ shx rm *.txt                  # a cross-platform way to delete files!\n\n$ shx ls\n\n$ shx echo \"Hi there!\"\nHi there!\n\n$ shx touch helloworld.txt\n\n$ shx cp helloworld.txt foobar.txt\n\n$ shx mkdir sub\n\n$ shx ls\nfoobar.txt\nhelloworld.txt\nsub\n\n$ shx rm -r sub                 # options work as well\n\n$ shx --silent ls fakeFileName  # silence error output\n```\n\nAll commands internally call the ShellJS corresponding function, guaranteeing\ncross-platform compatibility.\n\n### package.json\n\nShellJS is good for writing long scripts. If you want to write bash-like,\nplatform-independent scripts, we recommend you go with that.\n\nHowever, `shx` is ideal for one-liners inside `package.json`:\n\n```javascript\n{\n  \"scripts\": {\n    \"clean\": \"shx rm -rf build dist && shx echo Done\"\n  }\n}\n```\n\n## Unsupported Commands\n\nDue to the differences in execution environments between ShellJS and `shx` (JS vs CLI) some commands are not supported:\n\n| Unsupported command | Recommend workaround |\n| ------------------- | -------------------- |\n| `shx cd`            | Just use plain old `cd` (it's the same on windows too) |\n| `shx pushd`         | No workaround |\n| `shx popd`          | No workaround |\n| `shx dirs`          | No workaround |\n| `shx set`           | See below |\n| `shx exit`          | Just use plain old `exit` |\n| `shx exec`          | Instead of `shx exec cmd`, just use plain old `cmd` |\n| `shx ShellString`   | No workaround (but why would you want this?) |\n\n### Shx options\n\nShx allows you to modify its behavior by passing arguments. Here's a list of\nsupported options:\n\n| [`set`](https://github.com/shelljs/shelljs#setoptions) flag | [`shell.config`](https://github.com/shelljs/shelljs#configuration) setting | shx command | Effect |\n|:---:| --- | --- | --- |\n| `-e` | `config.fatal = true` | Not supported | Exit upon first error |\n| `-v` | `config.verbose = true` | `shx --verbose cd foo` | Log the command as it's run |\n| `-f` | `config.noglob = true` | `shx --noglob cat '*.txt'` | Don't expand wildcards |\n| N/A | `config.silent = true` | `shx --silent cd noexist` | Don't show error output |\n\n## Team\n\n| [![Nate Fischer](https://avatars.githubusercontent.com/u/5801521?s=130)](https://github.com/nfischer) | [![Ari Porad](https://avatars1.githubusercontent.com/u/1817508?v=3&s=130)](http://github.com/ariporad) | [![Levi Thomason](https://avatars1.githubusercontent.com/u/5067638?v=3&s=130)](https://github.com/levithomason) |\n|:---:|:---:|:---:|\n| [Nate Fischer](https://github.com/nfischer) | [Ari Porad](http://github.com/ariporad) | [Levi Thomason](https://github.com/levithomason) |\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shelljs/shx.git"
  },
  "scripts": {
    "build": "babel src -d lib",
    "build:watch": "npm run build -- -w",
    "changelog": "shelljs-changelog",
    "codecov": "codecov",
    "dev": "concurrently -rk 'npm run build:watch' 'npm run lint:watch'",
    "lint": "eslint .",
    "lint:fix": "npm run lint --silent -- --fix",
    "lint:watch": "watch 'npm run lint --silent' src test",
    "posttest": "npm run lint --silent",
    "prebuild": "rimraf lib",
    "prepublish": "npm run build",
    "release:major": "shelljs-release major",
    "release:minor": "shelljs-release minor",
    "release:patch": "shelljs-release patch",
    "test": "nyc --reporter=text --reporter=lcov mocha",
    "test:watch": "concurrently -rk 'npm run test --silent -- -w' 'npm run lint:watch'"
  },
  "version": "0.2.2"
}
